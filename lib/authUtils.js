import { createPushTokens, updateCustomers } from './airtable/request';

// Fields

export const signUpFields = { NAME: 0, PHONENUM: 1, PASSWORD: 2, PASSWORD1: 3, PASSWORD2: 4, };

// newToken is the value generated by Expo; a string
// updateCustomerPushTokens is called after customer is looked up
export async function updateCustomerPushTokens(customer, newToken) {
  // If tokens are not being registered, do nothing
  if (!newToken) {
    return;
  }
  // If Notifications errored while registering token, may not have registered a pushToken initially
  // Else, we need to check if this device has already been registered to the user
  const isNew =
    'pushTokenIds' in customer &&
    'tokenNames' in customer &&
    !customer.tokenNames.includes(newToken);
  if (isNew) {
    const tokenId = await createPushTokens(newToken);
    await updateCustomers(customer.id, {
      pushTokenIds: [...customer.pushTokenIds, tokenId],
    });
  }
}

export function formatPhoneNumber(phoneNumber) {
  const onlyNumeric = phoneNumber.replace('[^0-9]', '');
  const formatted = `(${onlyNumeric.slice(0, 3)}) ${onlyNumeric.slice(
    3,
    6
  )}-${onlyNumeric.slice(6, 10)}`;
  return formatted;
}
